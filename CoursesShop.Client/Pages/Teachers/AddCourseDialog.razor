@using CoursesShop.Client.Models.Requests
@using Microsoft.AspNetCore.Http
@implements IDialogContentComponent<Course>

<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.WindowApps())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
    <FluentTextField @bind-Value="@Content.Title" Class="input" b-qqx4nwvrhq>Title:</FluentTextField><br />
    <FluentNumberField @bind-Value="@Content.Price" Class="input" b-qqx4nwvrhq>Price:</FluentNumberField><br />
    <FluentTextArea @bind-Value="@Content.Description" Class="input area" b-qqx4nwvrhq>Description</FluentTextArea><br />
</FluentDialogBody>

@code {
    [Parameter]
    public Course Content { get; set; } = default!;

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    

    private async Task SaveAsync()
    {
        await Dialog.CloseAsync(Content);
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}